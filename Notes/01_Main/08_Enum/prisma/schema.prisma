generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  age            Int
  name           String
  email          String?         @unique
  role           Role            @default(BASIC)
  // now we can use role of type 'Role' because that we define as enum bellow
  writtenPosts   Post[]          @relation("WrittenPosts")
  favoritePosts  Post[]          @relation("FavoritePosts")
  UserPreference UserPreference?

  @@unique([age, name])
  @@index([email])
}

// another type of Datasource Generator
enum Role {
  // so here we are add 'BASIC' and 'ADMIN' as Role which we can now add on model field as which role which user can have
  BASIC
  ADMIN
  // EDITOR
}

model UserPreference {
  id           String  @id @default(uuid())
  emailUpdates Boolean
  user         User    @relation(fields: [userId], references: [id])
  userId       String  @unique
}

model Post {
  id            String     @id @default(uuid())
  title         String
  averageRating Float
  createdAt     DateTime   @default(now())
  updateAt      DateTime   @updatedAt
  author        User       @relation("WrittenPosts", fields: [authorId], references: [id])
  authorId      String
  favoritedBy   User?      @relation("FavoritePosts", fields: [favoritedById], references: [id])
  favoritedById String?
  categories    Category[]
}

model Category {
  id   String @id @default(uuid())
  name String @unique
  post Post[]
}
